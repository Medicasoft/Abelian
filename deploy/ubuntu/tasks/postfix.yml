# Copyright 2014 MedicaSoft LLC USA and Info World SRL
# Licensed under the Apache License, Version 2.0 the "License";
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

   -  name: Configure Postfix installer
      debconf: name=postfix question="{{item.question}}" value="{{item.value}}" vtype='string'
      with_items:
         - { question: 'postfix/mailname', value: "{{MAIL_DOMAIN}}" }
         - { question: 'postfix/main_mailer_type', value: "Internet Site" }

   -  name: Install Postfix
      apt: name={{item}} state=present
      with_items:
       - postfix
       - postfix-pgsql

   - name: Create the postfix user 'direct'
     postgresql_user: name=direct state=present encrypted=yes role_attr_flags=NOSUPERUSER,NOCREATEDB,NOCREATEROLE
     sudo_user: "{{user}}"

   - name: Create the postfix database 'maildb'
     postgresql_db: name=maildb state=present owner=direct
     sudo_user: "{{user}}"

   - name: Create postfix database structure
     command: psql -d maildb -c "{{lookup('file', '../files/postfix.sql')}}"
     sudo_user: "{{user}}"

   - name: Install python development headers (requirement for python-ldap)
     apt: name={{item}} state=present
     with_items:
     - python-dev
     - libldap2-dev
     - libsasl2-dev
     - libssl-dev

   - name: Install python-ldap (dependencies for Python scripts)
     pip: name=python-ldap state=present

   - name: Install swig (requirement for M2Crypto)
     apt: name=swig state=present

   - name: Install M2Crypto (dependencies for Python scripts)
     pip: name=M2Crypto state=present

   - name: Install other dependencies for Python scripts
     pip: name={{item}} state=present
     with_items:
        - psycopg2
        - dnspython

   - name: Copy server files to remote node
     copy: src=../../src/smime/{{item}} dest=/var/spool/direct/{{item}}
     with_items:
        - certdisco.py
        - certvld.py
        - config.py
        - crypto.py
        - mdn.py
        - smimercv.py
        - smimesend.py

   - name: Set file attributes
     file: path=/var/spool/direct/{{item}} group=direct owner=direct mode=770
     with_items:
        - certdisco.py
        - certvld.py
        - config.py
        - crypto.py
        - mdn.py
        - smimercv.py
        - smimesend.py

   - name: Create pgsql directory
     file: path=/etc/postfix/pgsql state=directory

   - name: Add postfix user to maildb
     postgresql_user: name=postfix state=present password={{POSTFIX_PASSWORD}} db=maildb role_attr_flags=LOGIN
     sudo_user: "{{user}}"

   - name: Grant select priviledges to user
     postgresql_privs: database=maildb roles=postfix schema=public type=table objs=ALL_IN_SCHEMA grant_option=yes state=present priv=SELECT
     sudo_user: "{{user}}"

   - name: Set authentication method for postfix
     lineinfile: dest={{POSTGRES_CONFIG_PATH}}
           regexp='(# Put your actual configuration here\n)(local   maildb          postfix                                 password)?'
           backrefs=yes
           state=present
           line='\1local   maildb          postfix                                 password'

     notify:
     - Reload postgres

   - name: Add virtual maps
     template: src=templates/{{item}} dest=/etc/postfix/pgsql/{{item}}
     with_items:
        - virtual_mailbox_maps.cf
        - virtual_mailbox_domains.cf

   - name: Add local domain to domains database
     command: "{{SPOOL}}/tools/direct_domain add -d {{MAIL_DOMAIN}} -t local"
     sudo_user: direct

   - name: Edit postfix config file and service entries
     command: postconf {{item}}
     with_items:
        - "-e 'mydestination = localhost'"
        - "-e 'mailbox_transport = direct-rx'"
        - "-e 'virtual_transport = direct-rx'"
        - "-e 'virtual_mailbox_domains =pgsql:/etc/postfix/pgsql/virtual_mailbox_domains.cf'"
        - "-e 'virtual_mailbox_maps = pgsql:/etc/postfix/pgsql/virtual_mailbox_maps.cf'"
        - "-M direct-rx/unix='direct-rx unix - n n - - pipe flags=RXq user=direct argv=/var/spool/direct/smimercv.py ${queue_id} ${recipient} ${sender}'"
     notify:
     - Reload postfix


