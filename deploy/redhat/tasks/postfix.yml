# Copyright 2014 MedicaSoft LLC USA and Info World SRL
# Licensed under the Apache License, Version 2.0 the "License";
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

   # Default version ships with mysql
   # - name: Install Postfix
     # yum: name={{item}} state=present
     # with_items:
       # - postfix
   
 
       
   - name: Postfix | Download archive
     get_url: url=ftp://ftp.porcupine.org/mirrors/postfix-release/official/postfix-2.11.1.tar.gz dest=/usr/local/src/
   
   - name: Postfix | Unarchive download
     command: chdir=/usr/local/src/ tar xzvf postfix-2.11.1.tar.gz

   - name: Postfix | Install prereqs for compiling
     yum: name={{item}} state=present
     with_items:
       - db4-devel
       - cyrus-sasl 
       - cyrus-sasl-devel
       - openssl
       - openssl-devel
       - pcre
       - pcre-devel
       - openldap
       - openldap-devel
        
     
   - name: Postfix | Copy header db.h
     command: cp /usr/include/libdb4/db.h /usr/include

   - name: Postfix | Execute make makefiles
     command: chdir=/usr/local/src/postfix-2.11.1 make makefiles CCARGS='-fPIC -DUSE_TLS -DUSE_SSL -DUSE_SASL_AUTH -DUSE_CYRUS_SASL -DPREFIX=\\"/usr\\" -DHAS_PCRE -I/usr/include/openssl -DHAS_PGSQL -I/usr/include/pgsql -I/usr/include/sasl -I/usr/include' AUXLIBS='-L/usr/lib64 -L/usr/lib64/libdb4 -L/usr/lib64/openssl -lssl -lcrypto -L/usr/lib64/pgsql -lpq -L/usr/lib64/sasl2 -lsasl2 -lpcre -lz -lm -lldap -llber -Wl,-rpath,/usr/lib64/openssl -pie -Wl,-z,relro' OPT='-O' DEBUG='-g'

   - name: Postfix | Execute make
     command: chdir=/usr/local/src/postfix-2.11.1 make
     
   - name: Postfix | Execute make upgrade
     command: chdir=/usr/local/src/postfix-2.11.1 make upgrade
   
   - name: Postfix | Configure Postfix
     lineinfile: dest=/etc/postfix/main.cf regexp='^\s*inet_interfaces\s*=.*' line="inet_interfaces=all"
     notify: Restart postfix
  
   - name: Create the postfix user 'direct'
     postgresql_user: name=direct state=present encrypted=yes role_attr_flags=NOSUPERUSER,NOCREATEDB,NOCREATEROLE
     sudo_user: "{{postgresql_admin_user}}"
     
   - name: Create the postfix database 'maildb'
     postgresql_db: name=maildb state=present owner=direct
     sudo_user: "{{postgresql_admin_user}}"
     
   - name: Create postfix database structure
     command: psql -d maildb -c "{{lookup('file', '../files/postfix.sql')}}"
     sudo_user: "{{postgresql_admin_user}}"
 
     
   - name: Create pgsql directory
     file: path=/etc/postfix/pgsql state=directory
  
   - name: Add postfix user to maildb
     postgresql_user: name=postfix state=present password={{POSTFIX_PASSWORD}} db=maildb role_attr_flags=LOGIN
     sudo_user: "{{postgresql_admin_user}}"
   
   - name: Grant privileges to user
     postgresql_privs: database=maildb roles=postfix schema=public type=table objs=ALL_IN_SCHEMA grant_option=yes state=present priv=ALL
     sudo_user: "{{postgresql_admin_user}}"
  
   - name: Set authentication method for postfix
     lineinfile: dest=/var/lib/pgsql/data/pg_hba.conf           
           regexp='(# Put your actual configuration here\n)(local   maildb          postfix                                 password)?'
           backrefs=yes 
           state=present 
           line='\1local   maildb          postfix                                 password\nlocal   maildb          direct                                 trust' 
     sudo_user: "{{postgresql_admin_user}}"
     # notify: 
     # - Reload postgres
  
   - name: Postfix | Reload postgres after setting authentication method
     service: name=postgresql state=reloaded
   
   - name: Postfix | Add local domain to domains database
     command: "{{SPOOL}}/tools/direct_domain add -d {{MAIL_DOMAIN}} -t local"
     sudo_user: direct
     
   - name: Postfix | Add virtual maps
     template: src=templates/{{item}} dest=/etc/postfix/pgsql/{{item}}
     with_items:
        - virtual_mailbox_maps.cf
        - virtual_mailbox_domains.cf
        

   - name: Postfix | Edit postfix config file and service entries
     command: postconf {{item}}
     with_items:
        - "-e 'mydestination = localhost'"
        - "-e 'mailbox_transport = direct-rx'"
        - "-e 'virtual_transport = direct-rx'"
        - "-e 'virtual_mailbox_domains =pgsql:/etc/postfix/pgsql/virtual_mailbox_domains.cf'"
        - "-e 'virtual_mailbox_maps = pgsql:/etc/postfix/pgsql/virtual_mailbox_maps.cf'"
        - "-M direct-rx/unix='direct-rx unix - n n - - pipe flags=RXq user=direct argv=/var/spool/direct/smimercv.py ${queue_id} ${recipient} ${sender}'"
     notify: 
     - Reload postfix
     

