# Copyright 2014 MedicaSoft LLC USA and Info World SRL
# Licensed under the Apache License, Version 2.0 the "License";
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

   - name: PowerDNS | Install PowerDNS from EPEL
     yum: name={{item}} state=present
     with_items:
        - pdns
        - pdns-backend-postgresql.x86_64
   
   - name: PowerDNS | Configuration - set resolv.conf to use local server for resolve
     lineinfile: dest=/etc/resolv.conf line="nameserver 127.0.0.1" state=present
   
   - name: Ensure /etc/conf.d exists
     file: path=/etc/conf.d state=directory
     
   - name: Ensure /etc/conf.d/net exists
     file: path=/etc/conf.d/net state=touch
   
   - name: PowerDNS | Configuration - set conf.d/net such as dhcp client won't replace resolv.conf 
     lineinfile: dest=/etc/conf.d/net line='dhcpcd_eth0="-R"' state=present
     
   - name: PowerDNS | Create the pdns database
     postgresql_db: name=pdns state=present owner=postgres
     sudo_user: "{{postgresql_admin_user}}"
  
   - name: PowerDNS | Create the pdns tables
     shell: /bin/sh -c "psql -d pdns -f /usr/share/doc/pdns-backend-postgresql*/{{item}}"
     with_items:
        - schema.pgsql.sql
     sudo_user: "{{postgresql_admin_user}}"

   - name: PowerDNS | Create the user 'pdns'
     postgresql_user: name=pdns state=present password={{pdns_password}} role_attr_flags=NOSUPERUSER,NOCREATEDB,NOCREATEROLE
     sudo_user: "{{postgresql_admin_user}}"
 
   - name: PowerDNS | Create the user 'pdns'
     postgresql_user: name=pdns state=present password={{pdns_password}} role_attr_flags=NOSUPERUSER,NOCREATEDB,NOCREATEROLE
     sudo_user: "{{postgresql_admin_user}}"
 
   - name: PowerDNS | Set privs for user 'pdns'
     postgresql_privs: >
        db=pdns
        privs=ALL
        type=table
        objs=domains,records,domainmetadata
        role=pdns

   - name: PowerDNS | Set privs for user 'pdns' (2)
     postgresql_privs: >
        db=pdns
        privs=ALL
        type=sequence
        objs=domains_id_seq,records_id_seq
        role=pdns
  
   - name: PowerDNS | Set privs for user 'pdns' (3)
     postgresql_privs: >
        db=pdns
        privs=SELECT
        type=table
        obj=supermasters
        role=pdns

   - name: PowerDNS | Configure pdns.conf
     lineinfile: dest=/etc/pdns/pdns.conf line="{{item}}" state=present      
     with_items:
        - "setuid=pdns"
        - "setgid=pdns"
        - "launch=gpgsql"
        - "gpgsql-host=localhost"
        - "gpgsql-dbname=pdns"
        - "gpgsql-user=pdns"
        - "gpgsql-password={{pdns_password}}"
        - "gpgsql-dnssec=no"

        - "allow-recursion=127.0.0.1"
        - "disable-axfr=yes"
        - "guardian=yes"

   # - name: Remove pdns.simplebind config file
     # file: name=/etc/powerdns/pdns.d/pdns.simplebind.conf state=absent
     # notify:
       # - Restart pdns
    
   - name: PowerDNS | Create temp sql script directory
     file: name={{TEMP_SQL_PATH}} state=directory mode=770 owner=postgres group=postgres
 
   - name: Save certificate info
     shell: openssl x509 -in "{{SPOOL}}/ca/cert/{{MAIL_DOMAIN}}/direct.pem" -modulus | awk '
          BEGIN {ORS=" ";OFS=" ";PKIX=1;RSASHA1=5}
          {
            if(NR==1) printf("%d %d %d ",PKIX,strtonum("0x" substr($0,length($0)-3)),RSASHA1);               
            if(NR>3) print l;
            l=$0;
         }'
     register: CERT
     sudo: yes
     
   - name: PowerDNS | Prepare pdns database script
     template: src=templates/pdns_db.j2 dest={{TEMP_SQL_PATH}}/pdns_db.sql  mode=774    

   - name: PowerDNS | Fill pdns database
     command: psql -d pdns -f {{TEMP_SQL_PATH}}/pdns_db.sql    
     sudo_user: "{{postgresql_admin_user}}"
     when: pdns_fill_database
     notify:
       - Restart pdns

   - name: PowerDNS | Remove temp script file
     file: name={{TEMP_SQL_PATH}}/pdns_db.sql state=absent

   - name: Copy Init Script
     copy: src=files/init.d_pdns dest=/etc/init.d/pdns mode=775 owner=root

   - name: PowerDNS | Add service to boot
     command: chkconfig --add pdns

   - name: PowerDNS | Enable service on boot
     command: chkconfig pdns on

   - name: PowerDNS | Start service  
     service: name=pdns state=started
      

   #- name: Configure pdnssec
   #  command: pdnssec rectify-zone {{DOMAIN}}

