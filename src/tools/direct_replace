#!/usr/bin/env python

""" Copyright 2014 MedicaSoft LLC USA and Info World SRL
Licensed under the Apache License, Version 2.0 the "License";
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import argparse, sys, os, subprocess, shutil, pwd

KEYDIR = '/var/spool/direct/ca/key'
CERTDIR = '/var/spool/direct/ca/cert'

def demote():
    pw_record = pwd.getpwnam('postgres')
    user_uid  = pw_record.pw_uid
    user_gid  = pw_record.pw_gid
    def result():
        os.setgid(user_gid)
        os.setuid(user_uid)
    return result

parser = argparse.ArgumentParser()
parser.add_argument('-d', '--domain', required = True,help='mail domain name')
parser.add_argument('-k', '--key_file', required=True, help='private key file PEM format')
parser.add_argument('-c', '--cert_file', required=True, help='public key file PEM format')

parms = parser.parse_args()

#replace the direct key and cert files with the new ones
shutil.copy2(parms.key_file, os.path.join(KEYDIR, parms.domain, 'direct.key'))
shutil.copy2(parms.cert_file, os.path.join(CERTDIR, parms.domain, 'direct.pem'))

#compute modulus
cmd = ('openssl', 'x509', '-in', parms.cert_file, '-noout', '-modulus')
proc = subprocess.Popen(cmd, stdout = subprocess.PIPE)
stdout, stderr = proc.communicate()

modulus = int('0x%s' % stdout[-5:], 16)

#prepare CERT record
cert = '1 %s 5 ' % modulus
with open(parms.cert_file) as fin:
    for line in fin:
        if line.startswith('-----'):
            continue
        cert += line.replace('\n', ' ')

print cert

cmd = ('psql','-d','pdns','-c',"UPDATE records SET content = '%s' WHERE type = 'CERT' AND name = '%s';" % (cert, parms.domain))
proc = subprocess.Popen(cmd, preexec_fn=demote(), stdout = subprocess.PIPE)
stdout,stderr = proc.communicate()
print stdout